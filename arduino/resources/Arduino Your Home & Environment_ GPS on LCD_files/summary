// API callback
getPosts({"version":"1.0","encoding":"UTF-8","feed":{"xmlns":"http://www.w3.org/2005/Atom","xmlns$openSearch":"http://a9.com/-/spec/opensearchrss/1.0/","xmlns$gd":"http://schemas.google.com/g/2005","xmlns$georss":"http://www.georss.org/georss","xmlns$thr":"http://purl.org/syndication/thread/1.0","xmlns$blogger":"http://schemas.google.com/blogger/2008","id":{"$t":"tag:blogger.com,1999:blog-4702287955799719958"},"updated":{"$t":"2016-02-09T11:52:36.852-05:00"},"category":[{"term":"youtube"}],"title":{"type":"text","$t":"Arduino Your Home \u0026 Environment"},"subtitle":{"type":"html","$t":"Learn to monitor and control your home \u0026amp; environment with self contained, inter-communicating microprocessors. Applications include ham radio, robotics, weather stations, model railroading, toys and more. - KK4HFJ"},"link":[{"rel":"http://schemas.google.com/g/2005#feed","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/summary?alt\u003djson-in-script\u0026max-results\u003d10"},{"rel":"self","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/summary?alt\u003djson-in-script\u0026max-results\u003d10"},{"rel":"alternate","type":"text/html","href":"http://arduinotronics.blogspot.com/"},{"rel":"hub","href":"http://pubsubhubbub.appspot.com/"},{"rel":"next","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/summary?alt\u003djson-in-script\u0026start-index\u003d11\u0026max-results\u003d10"}],"author":[{"name":{"$t":"Steve Spence"},"uri":{"$t":"https://plus.google.com/102524489533623492298"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"//lh5.googleusercontent.com/-VmYFFCUqsP8/AAAAAAAAAAI/AAAAAAAABds/29x3AZe9oPo/s32-c/photo.jpg"}}],"generator":{"version":"7.00","uri":"https://www.blogger.com","$t":"Blogger"},"openSearch$totalResults":{"$t":"421"},"openSearch$startIndex":{"$t":"1"},"openSearch$itemsPerPage":{"$t":"10"},"entry":[{"id":{"$t":"tag:blogger.com,1999:blog-4702287955799719958.post-7121181782297850214"},"published":{"$t":"2016-02-04T08:51:00.001-05:00"},"updated":{"$t":"2016-02-04T09:00:22.092-05:00"},"title":{"type":"text","$t":"Arduino and Raspberry Pi Educational Resources"},"summary":{"type":"text","$t":"\n\nI've been a fan of Packt Publishing technical books for a long time. I've purchased quite a few volumes for my Arduino and Raspberry Pi library, and even had the honor of being a technical editor. Now you can get a years access to their complete library of titles:\n\n\nWith PacktLib subscription service, you have access to every single book in Packtâ€™s huge library of over 3,000 strong eBooks and "},"link":[{"rel":"replies","type":"application/atom+xml","href":"http://arduinotronics.blogspot.com/feeds/7121181782297850214/comments/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http://arduinotronics.blogspot.com/2016/02/arduino-and-raspberry-pi-educational.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/default/7121181782297850214"},{"rel":"self","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/default/7121181782297850214"},{"rel":"alternate","type":"text/html","href":"http://arduinotronics.blogspot.com/2016/02/arduino-and-raspberry-pi-educational.html","title":"Arduino and Raspberry Pi Educational Resources"}],"author":[{"name":{"$t":"Steve Spence"},"uri":{"$t":"https://plus.google.com/102524489533623492298"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"//lh5.googleusercontent.com/-VmYFFCUqsP8/AAAAAAAAAAI/AAAAAAAABds/29x3AZe9oPo/s32-c/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https://2.bp.blogspot.com/-ajRqGm9W3HE/VrNXPW1wYXI/AAAAAAAAFbM/lD-45bDKfwg/s72-c/7584OS_Cover.jpg","height":"72","width":"72"},"thr$total":{"$t":"0"},"gd$extendedProperty":[{"name":"commentSource","value":"1"},{"name":"commentModerationMode","value":"FILTERED_POSTMOD"}]},{"id":{"$t":"tag:blogger.com,1999:blog-4702287955799719958.post-949997869047655526"},"published":{"$t":"2016-01-27T08:30:00.003-05:00"},"updated":{"$t":"2016-01-27T10:38:14.143-05:00"},"title":{"type":"text","$t":"Arduino: PLC or PAC"},"summary":{"type":"text","$t":"\n\nThe traditional Programmable Logic Controller (PLC) is used in process controls and Programmed in Ladder Logic. A more recent evolutionary step is the Programmable Automation Controller (PAC), which is typically programmed in C/C++, and has analog, digital, and communications functions built in. This is the arena where the Arduino (and even a Raspberry Pi) shines. No longer do process controls "},"link":[{"rel":"replies","type":"application/atom+xml","href":"http://arduinotronics.blogspot.com/feeds/949997869047655526/comments/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http://arduinotronics.blogspot.com/2016/01/arduino-plc-or-pac.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/default/949997869047655526"},{"rel":"self","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/default/949997869047655526"},{"rel":"alternate","type":"text/html","href":"http://arduinotronics.blogspot.com/2016/01/arduino-plc-or-pac.html","title":"Arduino: PLC or PAC"}],"author":[{"name":{"$t":"Steve Spence"},"uri":{"$t":"https://plus.google.com/102524489533623492298"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"//lh5.googleusercontent.com/-VmYFFCUqsP8/AAAAAAAAAAI/AAAAAAAABds/29x3AZe9oPo/s32-c/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http://1.bp.blogspot.com/-8cPbW2MfJsw/VqjEumnkBSI/AAAAAAAAFag/ER9uD4vAXHw/s72-c/arduino%2Bdin%2Brail.jpg","height":"72","width":"72"},"thr$total":{"$t":"0"},"gd$extendedProperty":[{"name":"commentSource","value":"1"},{"name":"commentModerationMode","value":"FILTERED_POSTMOD"}]},{"id":{"$t":"tag:blogger.com,1999:blog-4702287955799719958.post-6772724242151566654"},"published":{"$t":"2016-01-02T11:22:00.001-05:00"},"updated":{"$t":"2016-01-19T13:54:35.622-05:00"},"title":{"type":"text","$t":"Using a 4x4 Keypad"},"summary":{"type":"text","$t":"\n\nPart 1 - I was working on a project for someone who needed a keypad for password entry. I couldn't find my 3x4 keypad, but found a 4x4 keypad in one of my parts boxes. I modified the example sketch that comes with the excellent keypad library to work with this particular keypad. I couldn't find a set of extended headers to directly connect the keypad to the Arduino, so I used a small protoboard"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http://arduinotronics.blogspot.com/feeds/6772724242151566654/comments/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http://arduinotronics.blogspot.com/2016/01/using-4x4-keypad.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/default/6772724242151566654"},{"rel":"self","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/default/6772724242151566654"},{"rel":"alternate","type":"text/html","href":"http://arduinotronics.blogspot.com/2016/01/using-4x4-keypad.html","title":"Using a 4x4 Keypad"}],"author":[{"name":{"$t":"Steve Spence"},"uri":{"$t":"https://plus.google.com/102524489533623492298"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"//lh5.googleusercontent.com/-VmYFFCUqsP8/AAAAAAAAAAI/AAAAAAAABds/29x3AZe9oPo/s32-c/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http://2.bp.blogspot.com/-hP00EjPKvf8/Vof46PswR_I/AAAAAAAAFYo/s9_deu0bmUU/s72-c/P1040746.JPG","height":"72","width":"72"},"thr$total":{"$t":"0"},"gd$extendedProperty":[{"name":"commentSource","value":"1"},{"name":"commentModerationMode","value":"FILTERED_POSTMOD"}]},{"id":{"$t":"tag:blogger.com,1999:blog-4702287955799719958.post-7498309414124661677"},"published":{"$t":"2015-12-27T12:48:00.000-05:00"},"updated":{"$t":"2016-01-19T13:56:22.908-05:00"},"title":{"type":"text","$t":"Arduino Nintendo DS Touch Screen"},"summary":{"type":"text","$t":"\n\nToday I hope to add some clarification to a popular project, based on a Nintendo DS Touch Screen, with breakout board from Sparkfun ($10).\n\n\nThe concept is simple. Print out a picture of your buttons, sliders, etc., slide it under the glass, and with a series of if statements, create zones of co-ordinates that fit the printed controls.\n\n\n\n\n\nI originally found this project in the 1st Edition of "},"link":[{"rel":"replies","type":"application/atom+xml","href":"http://arduinotronics.blogspot.com/feeds/7498309414124661677/comments/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http://arduinotronics.blogspot.com/2015/12/arduino-nintendo-ds-touch-screen.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/default/7498309414124661677"},{"rel":"self","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/default/7498309414124661677"},{"rel":"alternate","type":"text/html","href":"http://arduinotronics.blogspot.com/2015/12/arduino-nintendo-ds-touch-screen.html","title":"Arduino Nintendo DS Touch Screen"}],"author":[{"name":{"$t":"Steve Spence"},"uri":{"$t":"https://plus.google.com/102524489533623492298"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"//lh5.googleusercontent.com/-VmYFFCUqsP8/AAAAAAAAAAI/AAAAAAAABds/29x3AZe9oPo/s32-c/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http://4.bp.blogspot.com/-vaQiF3A5iCM/VoAfjpyeNxI/AAAAAAAAFYI/FOtUBQiZYK0/s72-c/P1040745.JPG","height":"72","width":"72"},"thr$total":{"$t":"0"},"gd$extendedProperty":[{"name":"commentSource","value":"1"},{"name":"commentModerationMode","value":"FILTERED_POSTMOD"}]},{"id":{"$t":"tag:blogger.com,1999:blog-4702287955799719958.post-7130820114532729289"},"published":{"$t":"2015-12-27T09:06:00.002-05:00"},"updated":{"$t":"2016-02-09T10:00:18.850-05:00"},"title":{"type":"text","$t":"SN754410 H-Bridge Motor Controller"},"summary":{"type":"text","$t":"\n\nOne of our upcoming projects is a wireless controller for model railroading. A tiny Arduino installed in the engine with a wireless receiver and a H Bridge motor controller chip will allow us to go forward, reverse, coast, brake, and have speed control. Today we are testing the H Bridge chip, a SN754410 from Sparkfun ($2.35).\n\n\n\n\nNo additional circuitry is needed, just the motor, the chip, and "},"link":[{"rel":"replies","type":"application/atom+xml","href":"http://arduinotronics.blogspot.com/feeds/7130820114532729289/comments/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http://arduinotronics.blogspot.com/2015/12/sn754410-h-bridge-motor-controller.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/default/7130820114532729289"},{"rel":"self","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/default/7130820114532729289"},{"rel":"alternate","type":"text/html","href":"http://arduinotronics.blogspot.com/2015/12/sn754410-h-bridge-motor-controller.html","title":"SN754410 H-Bridge Motor Controller"}],"author":[{"name":{"$t":"Steve Spence"},"uri":{"$t":"https://plus.google.com/102524489533623492298"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"//lh5.googleusercontent.com/-VmYFFCUqsP8/AAAAAAAAAAI/AAAAAAAABds/29x3AZe9oPo/s32-c/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https://3.bp.blogspot.com/-E_Ly4-WTAxI/Vn_wTxfSk3I/AAAAAAAAFXI/d55qM_g4rv4/s72-c/sn754410.jpg","height":"72","width":"72"},"thr$total":{"$t":"0"},"gd$extendedProperty":[{"name":"commentSource","value":"1"},{"name":"commentModerationMode","value":"FILTERED_POSTMOD"}]},{"id":{"$t":"tag:blogger.com,1999:blog-4702287955799719958.post-5329734692323486365"},"published":{"$t":"2015-12-27T06:35:00.002-05:00"},"updated":{"$t":"2016-01-19T13:58:04.825-05:00"},"title":{"type":"text","$t":"DIY I2C LCD and I/O"},"summary":{"type":"text","$t":"\n\nA few posts ago we discussed building your own I2C display to reduce the pin count from 6 to two. We have also added 5 inputs to this project, a video of the commercial version, and posted the instructable that you can vote on atÂ http://www.instructables.com/id/DIY-I2C-LCD-Display-With-Inputs/\n\n\n\n\nI'll be posting more projects using this 16 port I/O chip in the near future, like a I2C relay "},"link":[{"rel":"replies","type":"application/atom+xml","href":"http://arduinotronics.blogspot.com/feeds/5329734692323486365/comments/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http://arduinotronics.blogspot.com/2015/12/diy-i2c-lcd-and-io.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/default/5329734692323486365"},{"rel":"self","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/default/5329734692323486365"},{"rel":"alternate","type":"text/html","href":"http://arduinotronics.blogspot.com/2015/12/diy-i2c-lcd-and-io.html","title":"DIY I2C LCD and I/O"}],"author":[{"name":{"$t":"Steve Spence"},"uri":{"$t":"https://plus.google.com/102524489533623492298"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"//lh5.googleusercontent.com/-VmYFFCUqsP8/AAAAAAAAAAI/AAAAAAAABds/29x3AZe9oPo/s32-c/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http://2.bp.blogspot.com/--KQb3N70-a0/Vn_M7Oi2PKI/AAAAAAAAFW4/sfAAjvZF1kU/s72-c/i2c%2Blcd.JPG","height":"72","width":"72"},"thr$total":{"$t":"0"},"gd$extendedProperty":[{"name":"commentSource","value":"1"},{"name":"commentModerationMode","value":"FILTERED_POSTMOD"}]},{"id":{"$t":"tag:blogger.com,1999:blog-4702287955799719958.post-8545293456725459600"},"published":{"$t":"2015-12-16T10:09:00.000-05:00"},"updated":{"$t":"2016-01-19T13:58:43.599-05:00"},"title":{"type":"text","$t":"Building a IoT Server"},"summary":{"type":"text","$t":"\n\nThe \"Internet of Things\" is one of the most exciting topics around these days. Millions of internet enabled gadgets sending data to a data storage \u0026 reporting server, and retrieving data back for local control or display.\n\nOur last post described sending sensor data to a server. Today we will discuss more about setting up that server. We are using a hosting service (Hostgator) which gives easy "},"link":[{"rel":"replies","type":"application/atom+xml","href":"http://arduinotronics.blogspot.com/feeds/8545293456725459600/comments/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http://arduinotronics.blogspot.com/2015/12/building-iot-server.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/default/8545293456725459600"},{"rel":"self","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/default/8545293456725459600"},{"rel":"alternate","type":"text/html","href":"http://arduinotronics.blogspot.com/2015/12/building-iot-server.html","title":"Building a IoT Server"}],"author":[{"name":{"$t":"Steve Spence"},"uri":{"$t":"https://plus.google.com/102524489533623492298"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"//lh5.googleusercontent.com/-VmYFFCUqsP8/AAAAAAAAAAI/AAAAAAAABds/29x3AZe9oPo/s32-c/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http://2.bp.blogspot.com/-tlhN13z3FVU/VnF9dw-3RbI/AAAAAAAAFSU/HN1laC_awBI/s72-c/web%2Bserver%2Bdisplay.png","height":"72","width":"72"},"thr$total":{"$t":"0"},"gd$extendedProperty":[{"name":"commentSource","value":"1"},{"name":"commentModerationMode","value":"FILTERED_POSTMOD"}]},{"id":{"$t":"tag:blogger.com,1999:blog-4702287955799719958.post-8721609910437594459"},"published":{"$t":"2015-12-13T22:33:00.001-05:00"},"updated":{"$t":"2016-01-19T13:59:23.889-05:00"},"title":{"type":"text","$t":"Sending sensor data to a web server"},"summary":{"type":"text","$t":"\n\nBuild your own IOT service! Collect sensor data and send it to a web/database server.\n\nToday's project uses an Arduino equipped with a Ethernet shield, and a DHT-11 temperature / humidity sensor.\n\nArduino UNO\nArduino Ethernet Shield\nDHT-11 Module\n\nThe Arduino reads the DHT-11, and submits the data to a php script on a hosted web server. That php page inserts the data into a mySQL database, and "},"link":[{"rel":"replies","type":"application/atom+xml","href":"http://arduinotronics.blogspot.com/feeds/8721609910437594459/comments/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http://arduinotronics.blogspot.com/2015/12/sending-sensor-data-to-web-server.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/default/8721609910437594459"},{"rel":"self","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/default/8721609910437594459"},{"rel":"alternate","type":"text/html","href":"http://arduinotronics.blogspot.com/2015/12/sending-sensor-data-to-web-server.html","title":"Sending sensor data to a web server"}],"author":[{"name":{"$t":"Steve Spence"},"uri":{"$t":"https://plus.google.com/102524489533623492298"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"//lh5.googleusercontent.com/-VmYFFCUqsP8/AAAAAAAAAAI/AAAAAAAABds/29x3AZe9oPo/s32-c/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http://3.bp.blogspot.com/-p7hMKWAQQqA/Vm41j_pSENI/AAAAAAAAFSE/lZvczbxcn-A/s72-c/P1040709.JPG","height":"72","width":"72"},"thr$total":{"$t":"0"},"gd$extendedProperty":[{"name":"commentSource","value":"1"},{"name":"commentModerationMode","value":"FILTERED_POSTMOD"}]},{"id":{"$t":"tag:blogger.com,1999:blog-4702287955799719958.post-7541043700636077801"},"published":{"$t":"2015-11-21T19:28:00.001-05:00"},"updated":{"$t":"2015-11-21T19:28:32.301-05:00"},"title":{"type":"text","$t":"Arduino Controlled Adjustable Constant Current Source"},"summary":{"type":"text","$t":"\n\nDid you know you could use the Arduino to control the amount of current from a constant current source? Another great project from Henry's Bench, this experimental project uses an MCP4725 Digital to Analog Converter, an LM358 Op Amp,  an INA219 Current Sensor and a logic level N-Channel Mosfet to create a constant current source. You can program up to 3 amps of constant current."},"link":[{"rel":"replies","type":"application/atom+xml","href":"http://arduinotronics.blogspot.com/feeds/7541043700636077801/comments/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http://arduinotronics.blogspot.com/2015/11/arduino-controlled-adjustable-constant.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/default/7541043700636077801"},{"rel":"self","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/default/7541043700636077801"},{"rel":"alternate","type":"text/html","href":"http://arduinotronics.blogspot.com/2015/11/arduino-controlled-adjustable-constant.html","title":"Arduino Controlled Adjustable Constant Current Source"}],"author":[{"name":{"$t":"Steve Spence"},"uri":{"$t":"https://plus.google.com/102524489533623492298"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"//lh5.googleusercontent.com/-VmYFFCUqsP8/AAAAAAAAAAI/AAAAAAAABds/29x3AZe9oPo/s32-c/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http://3.bp.blogspot.com/-Ny88iqDjLOg/VlELhE4iNwI/AAAAAAAAFOw/2FAFokQuKeA/s72-c/Arduino-CC-Power-Supply-Tutorial-Hook-Up.png","height":"72","width":"72"},"thr$total":{"$t":"0"},"gd$extendedProperty":[{"name":"commentSource","value":"1"},{"name":"commentModerationMode","value":"FILTERED_POSTMOD"}]},{"id":{"$t":"tag:blogger.com,1999:blog-4702287955799719958.post-1245704255587587217"},"published":{"$t":"2015-11-21T09:25:00.000-05:00"},"updated":{"$t":"2015-11-21T09:25:43.637-05:00"},"title":{"type":"text","$t":"Hot Tentacle Action"},"summary":{"type":"text","$t":"\n\nWhat happens when you combine an arduino, a servo, and a rubber tentacle. Well, it could be madness, or it could be a knife wielding tentacle bot. Either way it's a conversation starter, or ender.\n\nMore servo fun at:\n\nhttp://arduinotronics.blogspot.com/2012/03/fun-with-servos.html\n\n\n\n\n\n"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http://arduinotronics.blogspot.com/feeds/1245704255587587217/comments/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http://arduinotronics.blogspot.com/2015/11/hot-tentacle-action.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/default/1245704255587587217"},{"rel":"self","type":"application/atom+xml","href":"https://www.blogger.com/feeds/4702287955799719958/posts/default/1245704255587587217"},{"rel":"alternate","type":"text/html","href":"http://arduinotronics.blogspot.com/2015/11/hot-tentacle-action.html","title":"Hot Tentacle Action"}],"author":[{"name":{"$t":"Steve Spence"},"uri":{"$t":"https://plus.google.com/102524489533623492298"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"//lh5.googleusercontent.com/-VmYFFCUqsP8/AAAAAAAAAAI/AAAAAAAABds/29x3AZe9oPo/s32-c/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http://3.bp.blogspot.com/-f_b8JqH_K70/VlB9_2bnbTI/AAAAAAAAFM0/54vIKW_A4MI/s72-c/arduino%2Btentacle.png","height":"72","width":"72"},"thr$total":{"$t":"0"},"gd$extendedProperty":[{"name":"commentSource","value":"1"},{"name":"commentModerationMode","value":"FILTERED_POSTMOD"}]}]}});